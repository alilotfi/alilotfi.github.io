{"swagger": "2.0", "info": {"title": "Ayana API", "description": "API documentation for Ayana backend", "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Token": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Token": []}], "paths": {"/api/cases/": {"get": {"operationId": "api_cases_list", "summary": "List cases", "description": "List cases. Can be filtered by investigator.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Case"}}}}, "tags": ["api"]}, "post": {"operationId": "api_cases_create", "summary": "Create case", "description": "Create a new case.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Case"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Case"}}}, "tags": ["api"]}, "parameters": []}, "/api/cases/{id}/": {"get": {"operationId": "api_cases_read", "summary": "Get case", "description": "Retrieve a specific case by ID.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Case"}}}, "tags": ["api"]}, "put": {"operationId": "api_cases_update", "summary": "Update case", "description": "Update a case. Note: investigator cannot be changed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Case"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Case"}}}, "tags": ["api"]}, "patch": {"operationId": "api_cases_partial_update", "description": "ViewSet for managing cases.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Case"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Case"}}}, "tags": ["api"]}, "delete": {"operationId": "api_cases_delete", "summary": "Delete case", "description": "Delete a case.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/auth/login/": {"post": {"operationId": "auth_login_create", "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Login"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/logout/": {"get": {"operationId": "auth_logout_list", "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.", "description": "Accepts/Returns nothing.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "post": {"operationId": "auth_logout_create", "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.", "description": "Accepts/Returns nothing.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/change/": {"post": {"operationId": "auth_password_change_create", "summary": "Calls Django Auth SetPasswordForm save method.", "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordChange"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordChange"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/reset/": {"post": {"operationId": "auth_password_reset_create", "summary": "Calls Django Auth PasswordResetForm save method.", "description": "Accepts the following POST parameters: email\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordReset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordReset"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/reset/confirm/": {"post": {"operationId": "auth_password_reset_confirm_create", "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.", "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetConfirm"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordResetConfirm"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/user/": {"get": {"operationId": "auth_user_read", "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.", "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserDetails"}}}, "tags": ["auth"]}, "put": {"operationId": "auth_user_update", "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.", "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserDetails"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserDetails"}}}, "tags": ["auth"]}, "patch": {"operationId": "auth_user_partial_update", "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.", "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserDetails"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserDetails"}}}, "tags": ["auth"]}, "parameters": []}}, "definitions": {"Case": {"required": ["investigator", "name", "description"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "investigator": {"title": "Investigator", "type": "integer"}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "created_by": {"title": "Created by", "type": "integer", "readOnly": true}}}, "Login": {"required": ["password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "PasswordChange": {"required": ["new_password1", "new_password2"], "type": "object", "properties": {"new_password1": {"title": "New password1", "type": "string", "maxLength": 128, "minLength": 1}, "new_password2": {"title": "New password2", "type": "string", "maxLength": 128, "minLength": 1}}}, "PasswordReset": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "PasswordResetConfirm": {"required": ["new_password1", "new_password2", "uid", "token"], "type": "object", "properties": {"new_password1": {"title": "New password1", "type": "string", "maxLength": 128, "minLength": 1}, "new_password2": {"title": "New password2", "type": "string", "maxLength": 128, "minLength": 1}, "uid": {"title": "Uid", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "minLength": 1}}}, "UserDetails": {"required": ["username"], "type": "object", "properties": {"pk": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}}}}}